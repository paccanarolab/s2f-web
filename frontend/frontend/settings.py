"""
Django settings for frontend project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get(
    "FRONT_SECRET_KEY",
    "django-insecure-+2t9uxy-^+pk!y#ks2q6ab(&4@a&z_q6s1@e0jjrv9zt^++3m0")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = int(os.environ.get("FRONT_DEBUG", default=1)) == 1

ALLOWED_HOSTS = os.environ.get("FRONT_ALLOWED_HOSTS",
                               default="0.0.0.0 localhost 127.0.0.1 mateo.dev"
                               ).split(" ")

CSRF_TRUSTED_ORIGINS = os.environ.get("FRONT_CSRF_TRUSTED_ORIGINS",
                                      default="http://localhost"
                                      " http://127.0.0.0"
                                      " http://0.0.0.0"
                                      ).split(" ")
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "users",
    "oauth2_provider",
    "corsheaders",
    "base",
]

AUTH_USER_MODEL = "users.User"

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'frontend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.jinja2.Jinja2',
        'DIRS': [BASE_DIR / "jinja2"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            "environment": "frontend.jinja2.environment",
        },
    },
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'frontend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": os.environ.get("FRONT_SQL_ENGINE",
                                 "django.db.backends.sqlite3"),
        "NAME": os.environ.get("FRONT_SQL_DATABASE", BASE_DIR / "db.sqlite3"),
        "USER": os.environ.get("FRONT_SQL_USER", "user"),
        "PASSWORD": os.environ.get("FRONT_SQL_PASSWORD", "password"),
        "HOST": os.environ.get("FRONT_SQL_HOST", "localhost"),
        "PORT": os.environ.get("FRONT_SQL_PORT", "5432"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        "verbose": {
            "format": "{asctime} - {levelname} - {message}",
            "datefmt": "%Y-%m-%d %H:%M:%S",
            "style": "{"
        }
    },
    'handlers': {
        'log_to_stdout': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'main': {
            'handlers': ['log_to_stdout'],
            'level': 'DEBUG',
            'propagate': True,
        }
    }
}

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# STATIC_URL = 'static/'
STATIC_URL = os.environ.get("FRONT_STATIC_URL",
                            default='/s2f_frontend_static/')
STATIC_ROOT = BASE_DIR / 'staticfiles'

# User uploads
MEDIA_URL = os.environ.get("FRONT_MEDIA_URL",
                           default='/s2f_uploads/')
MEDIA_ROOT = BASE_DIR / 'uploads'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

FORCE_SCRIPT_NAME = os.environ.get("FRONT_FORCE_SCRIPT_NAME",
                                   default="/s2f_service/")
USE_X_FORWARDED_HOST = True
# Login and CORS

LOGIN_URL = '/admin/login/'

CORS_ORIGIN_ALLOW_ALL = True

# API CONFIG (for quick debugging of oauth)
# OAUTH2_PROVIDER = {
#     'ACCESS_TOKEN_EXPIRE_SECONDS': 60
# }
