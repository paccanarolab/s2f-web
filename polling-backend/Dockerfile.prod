###########
# BUILDER #
###########

FROM python:3.12.2-slim-bullseye as builder

WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apt -y update \
    && apt -y install postgresql-client-16 python3-dev netcat

# lint
RUN pip install --upgrade pip
#RUN pip install flake8==3.9.2
# COPY . .
# for older projects the linter will take forever in
# in the migration, perhaps if we get millions of dollars
# from Cardigan it's worth a rewrite.
#RUN flake8 --ignore=E501,F401

# install app dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

#########
# FINAL #
#########

# TODO: use a Docker builder for prod

FROM python:3.12.2-slim-bullseye

# create add user
# RUN mkdir -p /home/app
RUN groupadd app
RUN useradd -rm -d /home/app -s /bin/bash -g app -u 1001 app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/hint
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

# install dependencies
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.sh
COPY ./entrypoint.prod.sh $APP_HOME
RUN sed -i 's/\r$//g' $APP_HOME/entrypoint.prod.sh

COPY . $APP_HOME

RUN chown -R app:app $APP_HOME
RUN chmod +x $APP_HOME/entrypoint.prod.sh

USER app
RUN chmod +x $APP_HOME/entrypoint.prod.sh

ENTRYPOINT ["/home/app/hint/entrypoint.prod.sh"]
